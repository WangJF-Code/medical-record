<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nickel.medicalrecord.repository.IDetectBloodRoutineMapper">

    <sql id="Base_Column_List">
        id, patientId, `type`, dataId, leukocyte, leukocyteOutcome, haemoglobin, haemoglobinOutcome,
    platelet, plateletOutcome, cReactiveProtein, cReactiveProteinOutcome, images, checkTime, 
    createTime
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer"
            resultType="com.nickel.medicalrecord.model.entity.DetectBloodRoutine">
        select id,
               patientId,
               `type`,
               dataId,
               leukocyte,
               leukocyteOutcome,
               haemoglobin,
               haemoglobinOutcome,
               platelet,
               plateletOutcome,
               cReactiveProtein,
               cReactiveProteinOutcome,
               images,
               checkTime,
               createTime
        from detect_blood_routine
        where id = #{id}
    </select>
    <select id="selectList" resultType="com.nickel.medicalrecord.model.entity.DetectBloodRoutine">
        select id,
               patientId,
               `type`,
               dataId,
               leukocyte,
               leukocyteOutcome,
               haemoglobin,
               haemoglobinOutcome,
               platelet,
               plateletOutcome,
               cReactiveProtein,
               cReactiveProteinOutcome,
               images,
               checkTime,
               createTime
        from detect_blood_routine
        where `type` = #{type}
          and dataId = #{dataId}
        ORDER BY checkTime
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from detect_blood_routine
        where id = #{id}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.nickel.medicalrecord.model.entity.DetectBloodRoutine" useGeneratedKeys="true">
        insert into detect_blood_routine (patientId, `type`, dataId,
                                          leukocyte, leukocyteOutcome, haemoglobin,
                                          haemoglobinOutcome, platelet, plateletOutcome,
                                          cReactiveProtein, cReactiveProteinOutcome,
                                          images, checkTime, createTime)
        values (#{patientId}, #{type}, #{dataId},
                #{leukocyte}, #{leukocyteOutcome}, #{haemoglobin},
                #{haemoglobinOutcome}, #{platelet},
                #{plateletOutcome},
                #{cReactiveProtein}, #{cReactiveProteinOutcome},
                #{images}, #{checkTime}, #{createTime})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.nickel.medicalrecord.model.entity.DetectBloodRoutine" useGeneratedKeys="true">
        insert into detect_blood_routine
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="patientId != null">
                patientId,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="dataId != null">
                dataId,
            </if>
            <if test="leukocyte != null">
                leukocyte,
            </if>
            <if test="leukocyteOutcome != null">
                leukocyteOutcome,
            </if>
            <if test="haemoglobin != null">
                haemoglobin,
            </if>
            <if test="haemoglobinOutcome != null">
                haemoglobinOutcome,
            </if>
            <if test="platelet != null">
                platelet,
            </if>
            <if test="plateletOutcome != null">
                plateletOutcome,
            </if>
            <if test="cReactiveProtein != null">
                cReactiveProtein,
            </if>
            <if test="cReactiveProteinOutcome != null">
                cReactiveProteinOutcome,
            </if>
            <if test="images != null">
                images,
            </if>
            <if test="checkTime != null">
                checkTime,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="patientId != null">
                #{patientId},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="dataId != null">
                #{dataId},
            </if>
            <if test="leukocyte != null">
                #{leukocyte},
            </if>
            <if test="leukocyteOutcome != null">
                #{leukocyteOutcome},
            </if>
            <if test="haemoglobin != null">
                #{haemoglobin},
            </if>
            <if test="haemoglobinOutcome != null">
                #{haemoglobinOutcome},
            </if>
            <if test="platelet != null">
                #{platelet},
            </if>
            <if test="plateletOutcome != null">
                #{plateletOutcome},
            </if>
            <if test="cReactiveProtein != null">
                #{cReactiveProtein},
            </if>
            <if test="cReactiveProteinOutcome != null">
                #{cReactiveProteinOutcome},
            </if>
            <if test="images != null">
                #{images},
            </if>
            <if test="checkTime != null">
                #{checkTime},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.nickel.medicalrecord.model.entity.DetectBloodRoutine">
        update detect_blood_routine
        <set>
            <if test="patientId != null">
                patientId = #{patientId},
            </if>
            <if test="type != null">
                `type` = #{type},
            </if>
            <if test="dataId != null">
                dataId = #{dataId},
            </if>
            <if test="leukocyte != null">
                leukocyte = #{leukocyte},
            </if>
            <if test="leukocyteOutcome != null">
                leukocyteOutcome = #{leukocyteOutcome},
            </if>
            <if test="haemoglobin != null">
                haemoglobin = #{haemoglobin},
            </if>
            <if test="haemoglobinOutcome != null">
                haemoglobinOutcome = #{haemoglobinOutcome},
            </if>
            <if test="platelet != null">
                platelet = #{platelet},
            </if>
            <if test="plateletOutcome != null">
                plateletOutcome = #{plateletOutcome},
            </if>
            <if test="cReactiveProtein != null">
                cReactiveProtein = #{cReactiveProtein},
            </if>
            <if test="cReactiveProteinOutcome != null">
                cReactiveProteinOutcome = #{cReactiveProteinOutcome},
            </if>
            <if test="images != null">
                images = #{images},
            </if>
            <if test="checkTime != null">
                checkTime = #{checkTime},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.nickel.medicalrecord.model.entity.DetectBloodRoutine">
        update detect_blood_routine
        set patientId               = #{patientId},
            `type`                  = #{type},
            dataId                  = #{dataId},
            leukocyte               = #{leukocyte},
            leukocyteOutcome        = #{leukocyteOutcome},
            haemoglobin             = #{haemoglobin},
            haemoglobinOutcome      = #{haemoglobinOutcome},
            platelet                = #{platelet},
            plateletOutcome         = #{plateletOutcome},
            cReactiveProtein        = #{cReactiveProtein},
            cReactiveProteinOutcome = #{cReactiveProteinOutcome},
            images                  = #{images},
            checkTime               = #{checkTime}
        where id = #{id}
    </update>
</mapper>