<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nickel.medicalrecord.repository.IFollowupOnsetRecordMapper">
    <resultMap id="FollowupOnsetRecordDTOResultMap" type="com.nickel.medicalrecord.model.dto.FollowupOnsetRecordDTO">
        <result column="patientId" property="patientId"/>
        <result column="followupRecordsId" property="followupRecordsId"/>
        <result column="vascularRelatedSurgery" property="vascularRelatedSurgery"/>
        <result column="vascularRelatedSurgeryNum" property="vascularRelatedSurgeryNum"/>
        <result column="description" property="description"/>
        <result column="createTime" property="createTime"/>
        <collection property="onsetTypeDTOList" ofType="com.nickel.medicalrecord.model.dto.FollowupOnsetTypeDTO">
            <result column="type" property="type"/>
            <result column="relapseStatus" property="relapseStatus"/>
            <result column="relapseTime" property="relapseTime"/>
            <result column="relapseNum" property="relapseNum"/>
            <result column="relapseTextNum" property="relapseTextNum"/>
            <result column="relapseText" property="relapseText"/>
        </collection>
    </resultMap>
    <sql id="FollowupOnsetRecordDTO_Column_List">
        patientId, followupRecordsId, `type`, relapseStatus, relapseTime, relapseNum,
    relapseTextNum, relapseText, vascularRelatedSurgery, vascularRelatedSurgeryNum, description, 
    createTime
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer"
            resultType="com.nickel.medicalrecord.model.entity.FollowupOnsetRecord">
        select id,
               patientId,
               followupRecordsId,
               `type`,
               relapseStatus,
               relapseTime,
               relapseNum,
               relapseTextNum,
               relapseText,
               vascularRelatedSurgery,
               vascularRelatedSurgeryNum,
               description,
               createTime
        from followup_onset_record
        where id = #{id}
    </select>
    <select id="selectByFollowupRecordsId" resultMap="FollowupOnsetRecordDTOResultMap">
        select
        <include refid="FollowupOnsetRecordDTO_Column_List"/>
        from followup_onset_record
        where followupRecordsId = #{followupRecordsId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from followup_onset_record
        where id = #{id}
    </delete>
    <delete id="deleteByFollowupRecordsId">
        delete
        from followup_onset_record
        where followupRecordsId = #{followupRecordsId}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.nickel.medicalrecord.model.entity.FollowupOnsetRecord" useGeneratedKeys="true">
        insert into followup_onset_record (patientId, followupRecordsId, `type`,
                                           relapseStatus, relapseTime, relapseNum,
                                           relapseTextNum, relapseText, vascularRelatedSurgery,
                                           vascularRelatedSurgeryNum, description,
                                           createTime)
        values (#{patientId}, #{followupRecordsId}, #{type},
                #{relapseStatus}, #{relapseTime}, #{relapseNum},
                #{relapseTextNum}, #{relapseText}, #{vascularRelatedSurgery},
                #{vascularRelatedSurgeryNum}, #{description},
                #{createTime})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.nickel.medicalrecord.model.entity.FollowupOnsetRecord" useGeneratedKeys="true">
        insert into followup_onset_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="patientId != null">
                patientId,
            </if>
            <if test="followupRecordsId != null">
                followupRecordsId,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="relapseStatus != null">
                relapseStatus,
            </if>
            <if test="relapseTime != null">
                relapseTime,
            </if>
            <if test="relapseNum != null">
                relapseNum,
            </if>
            <if test="relapseTextNum != null">
                relapseTextNum,
            </if>
            <if test="relapseText != null">
                relapseText,
            </if>
            <if test="vascularRelatedSurgery != null">
                vascularRelatedSurgery,
            </if>
            <if test="vascularRelatedSurgeryNum != null">
                vascularRelatedSurgeryNum,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="patientId != null">
                #{patientId},
            </if>
            <if test="followupRecordsId != null">
                #{followupRecordsId},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="relapseStatus != null">
                #{relapseStatus},
            </if>
            <if test="relapseTime != null">
                #{relapseTime},
            </if>
            <if test="relapseNum != null">
                #{relapseNum},
            </if>
            <if test="relapseTextNum != null">
                #{relapseTextNum},
            </if>
            <if test="relapseText != null">
                #{relapseText},
            </if>
            <if test="vascularRelatedSurgery != null">
                #{vascularRelatedSurgery},
            </if>
            <if test="vascularRelatedSurgeryNum != null">
                #{vascularRelatedSurgeryNum},
            </if>
            <if test="description != null">
                #{description},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.nickel.medicalrecord.model.entity.FollowupOnsetRecord">
        update followup_onset_record
        <set>
            <if test="patientId != null">
                patientId = #{patientId},
            </if>
            <if test="followupRecordsId != null">
                followupRecordsId = #{followupRecordsId},
            </if>
            <if test="type != null">
                `type` = #{type},
            </if>
            <if test="relapseStatus != null">
                relapseStatus = #{relapseStatus},
            </if>
            <if test="relapseTime != null">
                relapseTime = #{relapseTime},
            </if>
            <if test="relapseNum != null">
                relapseNum = #{relapseNum},
            </if>
            <if test="relapseTextNum != null">
                relapseTextNum = #{relapseTextNum},
            </if>
            <if test="relapseText != null">
                relapseText = #{relapseText},
            </if>
            <if test="vascularRelatedSurgery != null">
                vascularRelatedSurgery = #{vascularRelatedSurgery},
            </if>
            <if test="vascularRelatedSurgeryNum != null">
                vascularRelatedSurgeryNum = #{vascularRelatedSurgeryNum},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.nickel.medicalrecord.model.entity.FollowupOnsetRecord">
        update followup_onset_record
        set patientId                 = #{patientId},
            followupRecordsId         = #{followupRecordsId},
            `type`                    = #{type},
            relapseStatus             = #{relapseStatus},
            relapseTime               = #{relapseTime},
            relapseNum                = #{relapseNum},
            relapseTextNum            = #{relapseTextNum},
            relapseText               = #{relapseText},
            vascularRelatedSurgery    = #{vascularRelatedSurgery},
            vascularRelatedSurgeryNum = #{vascularRelatedSurgeryNum},
            description               = #{description}
        where id = #{id}
    </update>
</mapper>